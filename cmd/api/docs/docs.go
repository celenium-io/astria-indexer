// SPDX-FileCopyrightText: 2024 PK Lab AG <contact@pklab.io>
// SPDX-License-Identifier: MIT

// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/address": {
            "get": {
                "description": "List address info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "List address info",
                "operationId": "list-address",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/count": {
            "get": {
                "description": "Get count of addresses in network",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get count of addresses in network",
                "operationId": "get-address-count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}": {
            "get": {
                "description": "Get address info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address info",
                "operationId": "get-address",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Address"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}/actions": {
            "get": {
                "description": "Get address actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address actions",
                "operationId": "address-actions",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "transfer",
                            "sequence",
                            "validator_update",
                            "sudo_address_change",
                            "ibc_relay",
                            "ics20_withdrawal",
                            "ibc_relayer_change",
                            "fee_asset_change",
                            "init_bridge_account",
                            "bridge_lock",
                            "bridge_unlock",
                            "bridge_sudo_change_action",
                            "fee_change"
                        ],
                        "type": "string",
                        "description": "Comma-separated action types list",
                        "name": "action_types",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Action"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}/fees": {
            "get": {
                "description": "Get address paid fees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address paid fees",
                "operationId": "get-address-fees",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.FullFee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}/roles": {
            "get": {
                "description": "Get address roles in bridges",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address roles in bridges",
                "operationId": "address-roles",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Bridge"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}/rollups": {
            "get": {
                "description": "Get rollups in which the address pushed something",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get rollups in which the address pushed something",
                "operationId": "address-rollups",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Rollup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/address/{hash}/txs": {
            "get": {
                "description": "Get address transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "address"
                ],
                "summary": "Get address transactions",
                "operationId": "address-transactions",
                "parameters": [
                    {
                        "maxLength": 48,
                        "minLength": 48,
                        "type": "string",
                        "description": "Hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "success",
                            "failed"
                        ],
                        "type": "string",
                        "description": "Comma-separated status list",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "transfer",
                            "sequence",
                            "validator_update",
                            "sudo_address_change",
                            "ibc_relay",
                            "ics20_withdrawal",
                            "ibc_relayer_change",
                            "fee_asset_change",
                            "init_bridge_account",
                            "bridge_lock",
                            "bridge_unlock",
                            "bridge_sudo_change_action",
                            "fee_change"
                        ],
                        "type": "string",
                        "description": "Comma-separated message types list",
                        "name": "msg_type",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Time from in unix timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Time to in unix timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block number",
                        "name": "height",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Tx"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block": {
            "get": {
                "description": "List blocks info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "List blocks info",
                "operationId": "list-block",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Need join stats for block",
                        "name": "stats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Block"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/count": {
            "get": {
                "description": "Get count of blocks in network",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get count of blocks in network",
                "operationId": "get-block-count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}": {
            "get": {
                "description": "Get block info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block info",
                "operationId": "get-block",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Need join stats for block",
                        "name": "stats",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Block"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}/actions": {
            "get": {
                "description": "Get actions from begin and end of block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get actions from begin and end of block",
                "operationId": "get-block-actions",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Action"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}/rollup_actions": {
            "get": {
                "description": "Get rollup actions in the block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get rollup actions in the block",
                "operationId": "get-block-rollup-actions",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.RollupAction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}/rollup_actions/count": {
            "get": {
                "description": "Get count of rollup actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get count of rollup actions",
                "operationId": "get-block-rollup-actions-count",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}/stats": {
            "get": {
                "description": "Get block stats by height",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get block stats by height",
                "operationId": "get-block-stats",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.BlockStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/block/{height}/txs": {
            "get": {
                "description": "Get transactions are contained in the block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "block"
                ],
                "summary": "Get transactions are contained in the block",
                "operationId": "get-block-transactions",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Tx"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/constants": {
            "get": {
                "description": "Get network constants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Get network constants",
                "operationId": "get-constants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Constants"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/enums": {
            "get": {
                "description": "Get astria explorer enumerators",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Get astria explorer enumerators",
                "operationId": "get-enums",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Enums"
                        }
                    }
                }
            }
        },
        "/v1/head": {
            "get": {
                "description": "Get current indexer head",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Get current indexer head",
                "operationId": "head",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.State"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup": {
            "get": {
                "description": "List rollups info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "List rollups info",
                "operationId": "list-rollups",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "id",
                            "size"
                        ],
                        "type": "string",
                        "description": "Field using for sorting. Default: id",
                        "name": "sort_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Rollup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup/count": {
            "get": {
                "description": "Get count of rollups in network",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "Get count of rollups in network",
                "operationId": "get-rollup-count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup/{hash}": {
            "get": {
                "description": "Get rollup info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "Get rollup info",
                "operationId": "get-rollup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64Url encoded rollup id",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Rollup"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup/{hash}/actions": {
            "get": {
                "description": "Get rollup actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "Get rollup actions",
                "operationId": "rollup-actions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64Url encoded rollup id",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.RollupAction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup/{hash}/addresses": {
            "get": {
                "description": "List addresses which pushed something in the rollup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "List addresses which pushed something in the rollup",
                "operationId": "get-rollup-addresses",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Address"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup/{hash}/all_actions": {
            "get": {
                "description": "Get rollup actions with actions of all connected bridges",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "Get rollup actions with actions of all connected bridges",
                "operationId": "rollup-all-actions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64Url encoded rollup id",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If true join rollup actions. Default: true",
                        "name": "rollup_actions",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If true join brigde actions. Default: true",
                        "name": "bridge_actions",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "transfer",
                            "sequence",
                            "validator_update",
                            "sudo_address_change",
                            "ibc_relay",
                            "ics20_withdrawal",
                            "ibc_relayer_change",
                            "fee_asset_change",
                            "init_bridge_account",
                            "bridge_lock",
                            "bridge_unlock",
                            "bridge_sudo_change_action",
                            "fee_change"
                        ],
                        "type": "string",
                        "description": "Comma-separated action types list",
                        "name": "action_types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time from in unix timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time to in unix timestamp",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Action"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/rollup/{hash}/bridges": {
            "get": {
                "description": "Get rollup bridges",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rollup"
                ],
                "summary": "Get rollup bridges",
                "operationId": "rollup-bridges",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64Url encoded rollup id",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Bridge"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search by hash or text",
                "operationId": "search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search string",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.SearchResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/fee/summary": {
            "get": {
                "description": "Get fee summary",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get fee summary",
                "operationId": "stats-fee-summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.FeeSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/rollup/series/{hash}/{name}/{timeframe}": {
            "get": {
                "description": "Get histogram with precomputed rollup by series name and timeframe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get histogram with precomputed rollup stats",
                "operationId": "stats-rollup-series",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Base64Url encoded rollup id",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "hour",
                            "day",
                            "month"
                        ],
                        "type": "string",
                        "description": "Timeframe",
                        "name": "timeframe",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "size",
                            "avg_size",
                            "min_size",
                            "max_size",
                            "actions_count"
                        ],
                        "type": "string",
                        "description": "Series name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Time from in unix timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time to in unix timestamp",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.RollupSeriesItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/series/{name}/{timeframe}": {
            "get": {
                "description": "Get histogram with precomputed stats by series name and timeframe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get histogram with precomputed stats",
                "operationId": "stats-series",
                "parameters": [
                    {
                        "enum": [
                            "hour",
                            "day",
                            "month"
                        ],
                        "type": "string",
                        "description": "Timeframe",
                        "name": "timeframe",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "data_size",
                            "tps",
                            "bps",
                            "rbps",
                            "fee",
                            "supply_change",
                            "block_time",
                            "tx_count",
                            "bytes_in_block",
                            "gas_price",
                            "gas_efficiency",
                            "gas_used",
                            "gas_wanted"
                        ],
                        "type": "string",
                        "description": "Series name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Time from in unix timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time to in unix timestamp",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.SeriesItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/summary": {
            "get": {
                "description": "Get network summary",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get network summary",
                "operationId": "stats-summary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.NetworkSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/summary/{timeframe}": {
            "get": {
                "description": "Get network summary for the last period",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get network summary for the last period",
                "operationId": "stats-summary-timeframe",
                "parameters": [
                    {
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ],
                        "type": "string",
                        "description": "Timeframe",
                        "name": "timeframe",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.NetworkSummaryWithChange"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/stats/token/transfer_distribution": {
            "get": {
                "description": "Token transfer distribution",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Token transfer distribution",
                "operationId": "stats-token-transfer-distribution",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.TokenTransferDistributionItem"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx": {
            "get": {
                "description": "List transactions info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List transactions info",
                "operationId": "list-transactions",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "success",
                            "failed"
                        ],
                        "type": "string",
                        "description": "Comma-separated status list",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "transfer",
                            "sequence",
                            "validator_update",
                            "sudo_address_change",
                            "ibc_relay",
                            "ics20_withdrawal",
                            "ibc_relayer_change",
                            "fee_asset_change",
                            "init_bridge_account",
                            "bridge_lock",
                            "bridge_unlock",
                            "bridge_sudo_change_action",
                            "fee_change"
                        ],
                        "type": "string",
                        "description": "Comma-separated action types list",
                        "name": "action_types",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time from in unix timestamp",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Time to in unix timestamp",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Block number",
                        "name": "height",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "If true join actions",
                        "name": "messages",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Tx"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/count": {
            "get": {
                "description": "Get count of transactions in network",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get count of transactions in network",
                "operationId": "get-transactions-count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}": {
            "get": {
                "description": "Get transaction by hash",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction by hash",
                "operationId": "get-transaction",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Tx"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}/actions": {
            "get": {
                "description": "Get transaction actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction actions",
                "operationId": "get-transaction-actions",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Action"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}/fees": {
            "get": {
                "description": "Get transaction fees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transaction fees",
                "operationId": "get-transaction-fees",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.FullFee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}/rollup_actions": {
            "get": {
                "description": "List transaction's rollup actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "List transaction's rollup actions",
                "operationId": "list-transactions-rollup-actions",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.RollupAction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/tx/{hash}/rollup_actions/count": {
            "get": {
                "description": "Count of rollup actions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Count of rollup actions",
                "operationId": "list-transactions-rollup-actions-count",
                "parameters": [
                    {
                        "maxLength": 64,
                        "minLength": 64,
                        "type": "string",
                        "description": "Transaction hash in hexadecimal",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/validators": {
            "get": {
                "description": "List validators sorted by power",
                "produces": [
                    "application/json",
                    "application/json"
                ],
                "tags": [
                    "validator"
                ],
                "summary": "List validators",
                "operationId": "list-validator",
                "parameters": [
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Validator"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/validators/{id}": {
            "get": {
                "description": "Get validator info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "validator"
                ],
                "summary": "Get validator info",
                "operationId": "get-validator",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Internal validator id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Validator"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/validators/{id}/blocks": {
            "get": {
                "description": "List blocks which was proposed by validator",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "validator"
                ],
                "summary": "List blocks which was proposed by validator",
                "operationId": "get-validator-blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Internal validator id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested entities",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "description": "Sort order",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Block"
                            }
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/validators/{id}/uptime": {
            "get": {
                "description": "Get validator's uptime and history of signed block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "validator"
                ],
                "summary": "Get validator's uptime and history of signed block",
                "operationId": "get-validator-uptime",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Internal validator id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Count of requested blocks",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ValidatorUptime"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.Error"
                        }
                    }
                }
            }
        },
        "/v1/ws": {
            "get": {
                "description": "## Documentation for websocket API\n\n### Notification\n\nThe structure of notification is following in all channels:\n\n` + "`" + `` + "`" + `` + "`" + `json\n{\n    \"channel\": \"channel_name\",\n    \"body\": \"\u003cobject or array\u003e\"  // depends on channel\n}\n` + "`" + `` + "`" + `` + "`" + `\n\n### Subscribe\n\nTo receive updates from websocket API send ` + "`" + `subscribe` + "`" + ` request to server.\n\n` + "`" + `` + "`" + `` + "`" + `json\n{\n    \"method\": \"subscribe\",\n    \"body\": {\n        \"channel\": \"\u003cCHANNEL_NAME\u003e\",\n        \"filters\": {\n            // pass channel filters\n        }\n    }\n}\n` + "`" + `` + "`" + `` + "`" + `\n\nNow 2 channels are supported:\n\n* ` + "`" + `head` + "`" + ` - receive information about indexer state update. Channel does not have any filters. Subscribe message should looks like:\n\n` + "`" + `` + "`" + `` + "`" + `json\n{\n    \"method\": \"subscribe\",\n    \"body\": {\n        \"channel\": \"head\"\n    }\n}\n` + "`" + `` + "`" + `` + "`" + `\n\nNotification body of ` + "`" + `responses.State` + "`" + ` type will be sent to the channel.\n\n* ` + "`" + `blocks` + "`" + ` - receive information about new blocks. Channel does not have any filters. Subscribe message should looks like:\n\n` + "`" + `` + "`" + `` + "`" + `json\n{\n    \"method\": \"subscribe\",\n    \"body\": {\n        \"channel\": \"blocks\"\n    }\n}\n` + "`" + `` + "`" + `` + "`" + `\n\nNotification body of ` + "`" + `responses.Block` + "`" + ` type will be sent to the channel.\n\n\n### Unsubscribe\n\nTo unsubscribe send ` + "`" + `unsubscribe` + "`" + ` message containing one of channel name describing above.\n\n\n` + "`" + `` + "`" + `` + "`" + `json\n{\n    \"method\": \"unsubscribe\",\n    \"body\": {\n        \"channel\": \"\u003cCHANNEL_NAME\u003e\",\n    }\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "websocket"
                ],
                "summary": "Websocket API",
                "operationId": "websocket",
                "responses": {}
            }
        }
    },
    "definitions": {
        "handler.Error": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.Action": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "fee": {
                    "$ref": "#/definitions/responses.Fee"
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1000
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "tx_hash": {
                    "type": "string",
                    "format": "binary",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "type": {
                    "type": "string",
                    "format": "string",
                    "example": "sequence"
                }
            }
        },
        "responses.Address": {
            "description": "address information",
            "type": "object",
            "properties": {
                "actions_count": {
                    "type": "integer",
                    "example": 10
                },
                "balances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Balance"
                    }
                },
                "bridge": {
                    "$ref": "#/definitions/responses.Bridge"
                },
                "first_height": {
                    "type": "integer",
                    "example": 100
                },
                "hash": {
                    "type": "string",
                    "example": "astria1phym4uktjn6gjle226009ge7u82w0dgtszs8x2"
                },
                "id": {
                    "type": "integer",
                    "example": 321
                },
                "is_bridge": {
                    "type": "boolean",
                    "example": false
                },
                "nonce": {
                    "type": "integer",
                    "example": 10
                },
                "signed_tx_count": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "responses.Balance": {
            "description": "Balance of address information",
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "nria"
                },
                "value": {
                    "type": "string",
                    "example": "10000000000"
                }
            }
        },
        "responses.Block": {
            "type": "object",
            "properties": {
                "action_types": {
                    "type": "string",
                    "example": "sequence,transfer"
                },
                "app_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "consensus_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "data_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "evidence_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "height": {
                    "type": "integer",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "example": 321
                },
                "last_commit_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "last_results_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "next_validators_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "parent_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "proposer": {
                    "$ref": "#/definitions/responses.ShortValidator"
                },
                "stats": {
                    "$ref": "#/definitions/responses.BlockStats"
                },
                "time": {
                    "type": "string",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "validators_hash": {
                    "type": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "version_app": {
                    "type": "string",
                    "example": "1"
                },
                "version_block": {
                    "type": "string",
                    "example": "11"
                }
            }
        },
        "responses.BlockStats": {
            "type": "object",
            "properties": {
                "block_time": {
                    "type": "integer",
                    "example": 12354
                },
                "bytes_in_block": {
                    "type": "integer",
                    "example": 1234
                },
                "fee": {
                    "type": "string",
                    "example": "28347628346"
                },
                "gas_used": {
                    "type": "integer",
                    "example": 1234
                },
                "gas_wanted": {
                    "type": "integer",
                    "example": 1234
                },
                "supply_change": {
                    "type": "string",
                    "example": "8635234"
                },
                "tx_count": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "responses.Bridge": {
            "description": "bridge account information",
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "astria1phym4uktjn6gjle226009ge7u82w0dgtszs8x2"
                },
                "asset": {
                    "type": "string",
                    "example": "nria"
                },
                "fee_asset": {
                    "type": "string",
                    "example": "nria"
                },
                "rollup": {
                    "type": "string",
                    "example": "O0Ia+lPYYMf3iFfxBaWXCSdlhphc6d4ZoBXINov6Tjc="
                },
                "sudo": {
                    "type": "string",
                    "example": "astria1phym4uktjn6gjle226009ge7u82w0dgtszs8x2"
                },
                "withdrawer": {
                    "type": "string",
                    "example": "astria1phym4uktjn6gjle226009ge7u82w0dgtszs8x2"
                }
            }
        },
        "responses.Constants": {
            "type": "object",
            "properties": {
                "module": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/responses.Params"
                    }
                }
            }
        },
        "responses.Enums": {
            "type": "object",
            "properties": {
                "action_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "responses.Fee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string",
                    "format": "string",
                    "example": "1000"
                },
                "asset": {
                    "type": "string",
                    "format": "string",
                    "example": "nria"
                }
            }
        },
        "responses.FeeSummary": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string",
                    "format": "integer",
                    "example": "1000000"
                },
                "asset": {
                    "type": "string",
                    "format": "string",
                    "example": "nria"
                },
                "fee_count": {
                    "type": "integer",
                    "format": "integer",
                    "example": 1000000
                },
                "max_amount": {
                    "type": "string",
                    "format": "integer",
                    "example": "1000000"
                },
                "min_amount": {
                    "type": "string",
                    "format": "integer",
                    "example": "1000000"
                }
            }
        },
        "responses.FullFee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string",
                    "format": "string",
                    "example": "1000"
                },
                "asset": {
                    "type": "string",
                    "format": "string",
                    "example": "nria"
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "payer": {
                    "type": "string",
                    "format": "string",
                    "example": "astria1phym4uktjn6gjle226009ge7u82w0dgtszs8x2"
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "tx_hash": {
                    "type": "string",
                    "format": "binary",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                }
            }
        },
        "responses.NetworkSummary": {
            "type": "object",
            "properties": {
                "block_time": {
                    "type": "number",
                    "format": "number",
                    "example": 2345
                },
                "bps": {
                    "type": "number",
                    "format": "number",
                    "example": 0.17632
                },
                "bytes_in_block": {
                    "type": "integer",
                    "format": "integer",
                    "example": 1024
                },
                "data_size": {
                    "type": "integer",
                    "format": "integer",
                    "example": 1000000
                },
                "fee": {
                    "type": "string",
                    "format": "string",
                    "example": "1012012"
                },
                "rbps": {
                    "type": "number",
                    "format": "number",
                    "example": 0.17632
                },
                "supply": {
                    "type": "string",
                    "format": "string",
                    "example": "1029129"
                },
                "tps": {
                    "type": "number",
                    "format": "number",
                    "example": 0.17632
                },
                "tx_count": {
                    "type": "integer",
                    "format": "integer",
                    "example": 100
                }
            }
        },
        "responses.NetworkSummaryWithChange": {
            "type": "object",
            "properties": {
                "block_time": {
                    "type": "number",
                    "format": "number",
                    "example": 2345
                },
                "block_time_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                },
                "bps": {
                    "type": "number",
                    "format": "number",
                    "example": 0.17632
                },
                "bps_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                },
                "bytes_in_block": {
                    "type": "integer",
                    "format": "integer",
                    "example": 1024
                },
                "bytes_in_block_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                },
                "data_size": {
                    "type": "integer",
                    "format": "integer",
                    "example": 1000000
                },
                "data_size_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                },
                "rbps": {
                    "type": "number",
                    "format": "number",
                    "example": 0.17632
                },
                "rbps_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                },
                "tps": {
                    "type": "number",
                    "format": "number",
                    "example": 0.17632
                },
                "tps_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                },
                "tx_count": {
                    "type": "integer",
                    "format": "integer",
                    "example": 100
                },
                "tx_count_pct": {
                    "type": "number",
                    "format": "number",
                    "example": 17.632
                }
            }
        },
        "responses.Params": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "responses.Rollup": {
            "type": "object",
            "properties": {
                "actions_count": {
                    "type": "integer",
                    "example": 101
                },
                "bridge_count": {
                    "type": "integer",
                    "example": 2
                },
                "first_height": {
                    "type": "integer",
                    "example": 100
                },
                "hash": {
                    "type": "string",
                    "example": "O0Ia+lPYYMf3iFfxBaWXCSdlhphc6d4ZoBXINov6Tjc="
                },
                "id": {
                    "type": "integer",
                    "example": 321
                },
                "size": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "responses.RollupAction": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "fee": {
                    "$ref": "#/definitions/responses.Fee"
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1000
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "rollup": {
                    "$ref": "#/definitions/responses.Rollup"
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "tx_hash": {
                    "type": "string",
                    "format": "binary",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "type": {
                    "type": "string",
                    "format": "string",
                    "example": "sequence"
                }
            }
        },
        "responses.RollupSeriesItem": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "value": {
                    "type": "string",
                    "format": "string",
                    "example": "0.17632"
                }
            }
        },
        "responses.SearchResult": {
            "type": "object",
            "properties": {
                "body": {},
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "responses.SeriesItem": {
            "type": "object",
            "properties": {
                "max": {
                    "type": "string",
                    "format": "string",
                    "example": "0.17632"
                },
                "min": {
                    "type": "string",
                    "format": "string",
                    "example": "0.17632"
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "value": {
                    "type": "string",
                    "format": "string",
                    "example": "0.17632"
                }
            }
        },
        "responses.ShortValidator": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "E641C7A2C964833E556AEF934FBF166B712874B6"
                },
                "id": {
                    "type": "integer",
                    "example": 321
                },
                "name": {
                    "type": "string",
                    "example": "Node0"
                }
            }
        },
        "responses.SignedBlocks": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer",
                    "example": 100
                },
                "signed": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "responses.State": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "string",
                    "format": "string",
                    "example": "astria-dusk-7"
                },
                "hash": {
                    "type": "string",
                    "format": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "last_height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "last_time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "example": "indexer"
                },
                "synced": {
                    "type": "boolean",
                    "format": "boolean",
                    "example": true
                },
                "total_accounts": {
                    "type": "integer",
                    "format": "int64",
                    "example": 43
                },
                "total_fee": {
                    "type": "string",
                    "format": "string",
                    "example": "312"
                },
                "total_rollups": {
                    "type": "integer",
                    "format": "int64",
                    "example": 312
                },
                "total_supply": {
                    "type": "string",
                    "format": "string",
                    "example": "312"
                },
                "total_tx": {
                    "type": "integer",
                    "format": "int64",
                    "example": 23456
                }
            }
        },
        "responses.TokenTransferDistributionItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string",
                    "format": "integer",
                    "example": "1000000"
                },
                "asset": {
                    "type": "string",
                    "format": "string",
                    "example": "nria"
                },
                "transfers_count": {
                    "type": "integer",
                    "format": "integer",
                    "example": 1000000
                }
            }
        },
        "responses.Tx": {
            "type": "object",
            "properties": {
                "action_types": {
                    "type": "string",
                    "format": "string",
                    "example": "sequence,transfer"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.Action"
                    }
                },
                "actions_count": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "codespace": {
                    "type": "string",
                    "format": "string",
                    "example": "sdk"
                },
                "error": {
                    "type": "string",
                    "format": "string",
                    "example": "some error text"
                },
                "gas_used": {
                    "type": "integer",
                    "format": "int64",
                    "example": 4253
                },
                "gas_wanted": {
                    "type": "integer",
                    "format": "int64",
                    "example": 9348
                },
                "hash": {
                    "type": "string",
                    "format": "binary",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "height": {
                    "type": "integer",
                    "format": "int64",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 321
                },
                "nonce": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                },
                "position": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                },
                "signature": {
                    "type": "string",
                    "format": "string",
                    "example": "652452A670018D629CC116E510BA88C1CABE061336661B1F3D206D248BD558AF"
                },
                "signer": {
                    "type": "string",
                    "format": "string",
                    "example": "115F94D8C98FFD73FE65182611140F0EDC7C3C94"
                },
                "status": {
                    "type": "string",
                    "format": "string",
                    "example": "success"
                },
                "time": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-04T03:10:57+00:00"
                }
            }
        },
        "responses.Validator": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "E641C7A2C964833E556AEF934FBF166B712874B6"
                },
                "id": {
                    "type": "integer",
                    "example": 321
                },
                "name": {
                    "type": "string",
                    "example": "Node0"
                },
                "power": {
                    "type": "string",
                    "example": "100"
                },
                "pubkey": {
                    "type": "string",
                    "example": "a497aa4a22ca8232876082920b110678988c86194b0c2e12a04dcf6f53688bb2"
                },
                "pubkey_type": {
                    "type": "string",
                    "example": "tendermint/PubKeyEd25519"
                }
            }
        },
        "responses.ValidatorUptime": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.SignedBlocks"
                    }
                },
                "uptime": {
                    "type": "string",
                    "example": "0.97"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api-dusk.astrotrek.io",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Astria Explorer API",
	Description:      "This is docs of Astria Explorer API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
